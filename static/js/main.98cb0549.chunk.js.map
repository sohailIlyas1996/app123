{"version":3,"sources":["components/Navbar.js","components/TextInput.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","onClick","changeTheme","role","htmlFor","TextInput","useState","text","setText","style","color","heading","rows","backgroundColor","onChange","event","console","log","target","value","newText","toUpperCase","showAlert","toLowerCase","split","length","prototype","PropTypes","string","isRequired","aboutText","defaultProps","Alert","alert","types","word","lower","charAt","slice","capitalized","msg","App","setmode","AlertObject","setAlert","message","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.98cb0549.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {Link} from 'react-router-dom'\r\nexport default function Navbar(props) {\r\n    return (\r\n       <>\r\n       \r\n       <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n      \r\n       \r\n\r\n      </ul>\r\n      <div className={`form-check form-switch text-${props.mode==='light'? 'dark':'light'}`}>\r\n  <input className=\"form-check-input\"  onClick={props.changeTheme}  type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark mode</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n       \r\n       </>\r\n    )\r\n}\r\n\r\nNavbar.prototype={\r\n  title:PropTypes.string.isRequired,\r\n  aboutText:PropTypes.string,\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'required Title',\r\n  aboutText: 'Required about'\r\n};","import React, { useState } from 'react';\r\n\r\n\r\nexport default function TextInput(props) {\r\n\r\n    const clearText=()=>{\r\n\r\n        let newTests='';\r\n        setText(newTests);\r\n        props.showAlert(\"Cleared all text \",\"success\");\r\n\r\n\r\n\r\n    }\r\n\r\n    const upperCase=()=>{\r\n        console.log('Convert to upper case was clicked '+ text );\r\n        let newText=text.toUpperCase(); \r\n        setText(newText);\r\n        \r\nprops.showAlert(\"Converted to UpperCase\",\"success\");    }\r\n    const lowerCase=()=>{\r\n        console.log('Convert to upper case was clicked '+ text );\r\n        let newText=text.toLowerCase(); \r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase\",\"success\");\r\n    }\r\n\r\n\r\n   const handleonchange=(event)=>{\r\n    console.log('On Change');\r\n    setText(event.target.value);\r\n\r\n   }\r\n    const [text,setText] = useState('Enter Some Text Here');\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container\" style={{color: props.mode==='dark'?'white':'black'}} >\r\n            <h1>{props.heading}</h1>\r\n  \r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" id=\"myBox\" rows=\"8\" style={{\r\n      backgroundColor:props.mode==='dark'?'grey':'white',\r\n      color:props.mode==='light'?'black':'white'\r\n  }}  onChange={handleonchange}  value={text} ></textarea>\r\n</div>\r\n<button className=\"btn btn-primary mx-2\" onClick={upperCase}> Convert to Uppercase</button>\r\n\r\n<button className=\"btn btn-primary mx-2\" onClick={lowerCase}> Convert to LowerCase</button>\r\n<button className=\"btn btn-primary mx-2\" onClick={clearText}> Clear Text</button>\r\n\r\n\r\n\r\n\r\n</div> \r\n    <div className=\"container my-3\" style={{\r\n        color:props.mode==='dark'?'white':'black'\r\n    }} >\r\n        <h1>Your Text Summary</h1>\r\n        <p> {text.split(\" \").length} words and {text.length} characters</p>\r\n        \r\n        <p>{0.008 * text.split(\" \").length }  Minutes required to read  </p>\r\n   <h2>Preview</h2>\r\n   <p>{text.length>0 ?text:'Enter something to preview'}</p>\r\n    </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nfunction Alert(props) {\r\n    const capitalized=(word)=>{\r\nlet lower=word.toLowerCase();\r\nreturn lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n    return (\r\n       props.alert && <div className={`alert alert-${props.alert.types} alert-dismissible fade show`} role=\"alert\">\r\n           <strong> {capitalized(props.alert.types)} </strong>: {props.alert.msg} \r\n      </div>\r\n    )\r\n}\r\n\r\nexport default Alert\r\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextInput from './components/TextInput';\nimport React,{ useState} from 'react'\nimport Alert from './components/Alert';\nimport About from './components/About';\n\nfunction App() {\n\nconst [mode, setmode] = useState('light')\nconst [AlertObject, setAlert] = useState(null)\nconst showAlert=(message,type)=>{\n setAlert( {\n  msg:message,\n  types:type\n}\n)\nsetTimeout(() => {\n  setAlert(null);\n}, 2000);\n}\nconst EnableDark=()=>{\n\n  if(mode==='light')\n{\n  setmode('dark')\n  document.body.style.backgroundColor=\"#042763\"\n  showAlert(\"Dark mode is enabled\",\"success\")\n  document.title='TextUtils-Dark Mode'\n}\nelse{\n  setmode('light')\n  \n  document.body.style.backgroundColor=\"white\"\n  showAlert(\"Light mode is enabled\",\"success\")\n  document.title='TextUtils-Light Mode'\n\n  \n}\n}\n\n\n\n\n  return (\n\n<>\n\n<Navbar title=\"TextUtils\" mode={mode}  changeTheme={EnableDark} aboutText=\"About\"/>\n\n<div className=\"container\" my-3=\"true\">\n<Alert  alert={AlertObject}/>\n\n          <TextInput  showAlert={showAlert} mode={mode} heading=\"Enter The Text To Analyze Below\"/>\n\n\n</div>\n\n</>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}